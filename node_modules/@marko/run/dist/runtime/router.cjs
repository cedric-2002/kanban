"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/runtime/router.ts
var router_exports = {};
__export(router_exports, {
  fetch: () => fetch,
  invoke: () => invoke,
  match: () => match
});
module.exports = __toCommonJS(router_exports);

// scripts/importMetaURL.js
var import_url = require("url");
var __importMetaURL = (0, import_url.pathToFileURL)(__filename);

// src/runtime/router.ts
function fromRuntime(name) {
  return (...args) => {
    const runtime = globalThis.__marko_run__;
    if (!runtime) {
      throw new Error(
        "This should have been replaced by the @marko/run plugin at build/dev time"
      );
    }
    return runtime[name](...args);
  };
}
var fetch = fromRuntime("fetch");
var match = fromRuntime("match");
var invoke = fromRuntime("invoke");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  fetch,
  invoke,
  match
});
