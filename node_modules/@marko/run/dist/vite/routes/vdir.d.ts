import type { PathInfo, RoutableFile, RoutableFileType } from "../types";
import type { Path, Segment } from "./parse";
export default class VDir {
    #private;
    readonly parent: VDir | null;
    readonly source: Path | null;
    readonly path: string;
    readonly fullPath: string;
    readonly segment: Segment;
    files: Map<RoutableFileType, RoutableFile> | undefined;
    constructor();
    constructor(parent: VDir, segment: Segment, source: Path);
    get pathInfo(): PathInfo;
    addDir(path: Path, segment: Segment): VDir;
    addFile(file: RoutableFile): void;
    dirs(): IterableIterator<VDir>;
    [Symbol.iterator](): IterableIterator<VDir>;
    static addPaths(roots: VDir[], paths: Path[]): VDir[];
}
